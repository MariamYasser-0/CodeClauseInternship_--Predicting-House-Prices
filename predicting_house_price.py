# -*- coding: utf-8 -*-
"""Predicting House Price.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_pG4wdLmB9mqyrOXFqnNiMN2B5A4Lei3
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from math import sqrt
from scipy.stats import skew
import matplotlib.pyplot as plt
from sklearn import metrics
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error, mean_squared_error

data = pd.read_csv('Housing.csv')

print(data.head())

print ('Total missing values in data set', sum(data.isna().sum()))
string_columns = data.select_dtypes(include=['object']).columns

numeric_cols = data.select_dtypes(include=[np.number])
corr = numeric_cols.corr()
print('Most Correlated Features With price:')
print(corr['price'].sort_values(ascending = False)[:10], '\n')
print ('Most uncorrelated features with price:')
print(corr['price'].sort_values(ascending = False)[-5:])

plt.scatter (x =data['area'], y =data['price'])
plt.ylabel('SalePrice')
plt.xlabel('Area')
plt.title('Area vs SalePrice')
plt.show()

plt.scatter (x =data['bedrooms'], y =data['price'])
plt.ylabel('SalePrice')
plt.xlabel('Bedrooms')
plt.show()

X_train = data[['area', 'bedrooms', 'bathrooms', 'stories', 'parking']]
y_train = data['price']
X_test = data[['area', 'bedrooms', 'bathrooms', 'stories', 'parking']]
y_test = data['price']
X_train, X_test, y_train, y_test = train_test_split(X_train, y_train, test_size=0.2, random_state=42)

md = LinearRegression()
md.fit(X_train, y_train)

prediction = md.predict(X_test)
plt.scatter(y_test, prediction)
plt.xlabel('True Values')
plt.ylabel('Predictions')
plt.show()

print('MAE:', metrics.mean_absolute_error(y_test, prediction))
print('MSE:', metrics.mean_squared_error(y_test, prediction))
print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, prediction)))

try:
    area = float(input("Enter the area of the house: "))
    bedrooms = float(input("Enter the number of bedrooms: "))
    bathrooms = float(input("Enter the number of bathrooms: "))
    stories = float(input("Enter the number of stories: "))
    parking = float(input("Enter the number of parking spaces: "))
except ValueError:
    print("Please enter valid numbers.")
else:
    user_input = pd.DataFrame({
        'area': [area],
        'bedrooms': [bedrooms],
        'bathrooms': [bathrooms],
        'stories': [stories],
        'parking': [parking]
    })
    user_prediction = md.predict(user_input)
    print(f"The predicted house price for the given area is: ${user_prediction[0]:,.2f}")